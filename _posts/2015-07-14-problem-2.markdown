---
layout: post
title:  "Problem 2: Even Fibonacci Numbers"
date:   2015-07-14 12:43:21
categories: Problem_2
excerpt: |
  Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
  
  <br /><br />1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  
  <br /><br />By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
---

> Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
> 
> `1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...`
> 
> By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

Solution: The fibonacci sequence is defined as:
<p align="center">
  <img src="../../../../Problem_2/math/fib.png" />
</p>

So, we can continue to generate the sequence until we reach a term over `4000000`, and maintain a running sum of all the even terms along the way.

{% highlight js %}
while the most recent term is less than 4000000
  set the most recent term to equal the current term + the previous term
  if this term is even, add it to our running total
{% endhighlight %}

In code:

{% highlight js %}
var sumEvenFibonacciToN = function(num) {
  var result = 0;
  var current = previous = 1;
  while(current < num) {
    temp = current + previous;
    previous = current;
    current = temp;
    if (current % 2 == 0)
      result += current;
  }
  return result;
}
{% endhighlight %}

our result is, `sumEvenFibonacciToN(4000000)`:

> 4613732

